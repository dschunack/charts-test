apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: validating-restrict-wildcard-verbs
  annotations:
    policies.kyverno.io/title: Restrict Wildcard in Verbs
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Role, ClusterRole, RBAC
    kyverno.io/kyverno-version: 1.6.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >-
      Wildcards ('*') in verbs grants all access to the resources referenced by it and
      does not follow the principal of least privilege. As much as possible,
      avoid such open verbs unless scoped to perhaps a custom API group.
      This policy blocks any Role or ClusterRole that contains a wildcard entry in
      the verbs list found in any rule.      
spec:
  validationFailureAction: {{ .Values.policies.validate.RestrictWildcardVerbs }}
  failurePolicy: Fail
  background: false
  rules:
    - name: wildcard-verbs
      match:
        any:
        - resources:
            kinds:
            - Role
            - ClusterRole
            namespaceSelector:
              matchExpressions:
              - key: enerkube-managed
                operator: In
                values:
                - "true"
        - resources:
            kinds:
            - Role
            - ClusterRole
            namespaces:
              - "default"
      exclude:
        any:
        - clusterRoles:
          - cluster-admin
        - subjects:
          - kind: Group
            name: system:masters
        - roles:
          - "*:default-edit-role-namespace"
          - "*:default-read-only-role-namespace"
        - resources:
            namespaces:
            - enerkube-security
      preconditions:
        all:
        - key: "{{`{{ request.operation }}`}}"
          operator: AnyIn
          value: ["CREATE", "UPDATE", "CONNECT"]
      validate:
        message: "Use of a wildcard ('*') in any verbs is forbidden."
        deny:
          conditions:
            any:
            - key: "{{`{{ contains(request.object.rules[].verbs[], '*') }}`}}"
              operator: Equals
              value: true